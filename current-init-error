Debugger entered--Lisp error: (error "package.el is not yet initialized!")
  signal(error ("package.el is not yet initialized!"))
  error("package.el is not yet initialized!")
  package-installed-p(org-plus-contrib (20180402))
  package--mapc(package--add-to-compatibility-table)
  package--build-compatibility-table()
  package--update-downloads-in-progress(("org" . "https://orgmode.org/elpa/"))
  #f(compiled-function () #<bytecode 0xf0faa9>)()
  package--check-signature("https://orgmode.org/elpa/" "archive-contents" "(1 (org              . [(20180402) ( ) \"Outline-based notes management and organizer\" tar])\n   (org-plus-contrib . [(20180402) ( ) \"Outline-based notes management and organizer\" tar]))\n" nil #f(compiled-function (&optional good-sigs) #<bytecode 0xf06aa9>) #f(compiled-function () #<bytecode 0xf0faa9>))
  package--download-one-archive(("org" . "https://orgmode.org/elpa/") "archive-contents" nil)
  package--download-and-read-archives(nil)
  package-refresh-contents()
  (and (= pair-count archive-count) (ngender-update-union-list 'package-archives archives) (package-refresh-contents))
  (let* ((pairs (list-to-associations args)) (pair-count (length pairs)) (archives (ngender-validate-list pairs (function ngender-archive-p) 'archive)) (archive-count (length archives))) (and (= pair-count archive-count) (ngender-update-union-list 'package-archives archives) (package-refresh-contents)))
  (if (cl-oddp (length args)) (ngender-warn args "even list") (let* ((pairs (list-to-associations args)) (pair-count (length pairs)) (archives (ngender-validate-list pairs (function ngender-archive-p) 'archive)) (archive-count (length archives))) (and (= pair-count archive-count) (ngender-update-union-list 'package-archives archives) (package-refresh-contents))))
  ngender-package-archive("gnu" "http://elpa.gnu.org/packages/" "marmalade" "http://marmalade-repo.org/packages/" "melpa-stable" "http://melpa-stable.milkbox.net/packages/" "org" "https://orgmode.org/elpa/")
  eval-buffer(#<buffer  *load*-465011> nil "/Data/Greg/Gits/emacs.d/User-Me/init-me.el" nil t)  ; Reading at buffer position 820
  load-with-code-conversion("/Data/Greg/Gits/emacs.d/User-Me/init-me.el" "/Data/Greg/Gits/emacs.d/User-Me/init-me.el" nil nil)
  load("init-me")
  eval-buffer(#<buffer  *load*-789580> nil "/home/greg/.emacs.d/init.el" nil t)  ; Reading at buffer position 1111
  load-with-code-conversion("/home/greg/.emacs.d/init.el" "/home/greg/.emacs.d/init.el" nil t)
  load("~/.emacs.d/init.el" nil t)
  eval-buffer(#<buffer  *load*> nil "/home/greg/.emacs" nil t)  ; Reading at buffer position 366
  load-with-code-conversion("/home/greg/.emacs" "/home/greg/.emacs" t t)
  load("~/.emacs" t t)
  #f(compiled-function () #<bytecode 0x26095d>)()
  command-line()
  normal-top-level()
